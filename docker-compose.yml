version: '3.4'

x-airflow-common: &airflow-common
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
  x-environment: &airflow_environment
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__FERNET_KEY=$AIRFLOW__CORE__FERNET_KEY
      - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=$AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      - AIRFLOW__CORE__STORE_DAG_CODE=True
      - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__CORE__TEST_CONNECTION=Enabled
      - SLING_PG=$SLING_PG
    
  x-airflow-image: &airflow_image apache/airflow:2.9.3

# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================

# SLING environment variable, referencing ecommerce postgres source db
x-sling-env: &sling_env
  SLING_PG: $SLING_PG

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: $airflow_POSTGRES_USER
      POSTGRES_PASSWORD: $airflow_POSTGRES_PASSWORD
      POSTGRES_DB: $airflow_POSTGRES_DB
      PGDATA: /var/lib/postgresql/data/pgdata #persist data so that connection data stays when you shutdown and start docker-compose
    ports:
      - "5433:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata #persist data so that connection data stays when you shutdown and start docker-compose
    networks:
      - my_network

  ecommercePG:
    image: postgres:latest
    container_name: ecommercePG
    hostname: ecommercePG
    environment:
      POSTGRES_USER: $e_POSTGRES_USER
      POSTGRES_PASSWORD: $e_POSTGRES_PASSWORD
      POSTGRES_DB: $e_POSTGRES_DB
    ports:
      - "5434:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - my_network

  sling:
    image: slingdata/sling
    container_name: sling-cli
    environment: *sling_env
    depends_on:
      - ecommercePG
    volumes: 
      - ./data:/data
      - ./sling_files:/sling_files
    entrypoint: /bin/bash
    command: -c 'sling run -r /sling_files/replication.yaml'
    networks:
      - my_network

  init:
    build:
      context: docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'
    networks:
      - my_network

  webserver:
    build:
      context: docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver
    networks:
      - my_network

  scheduler:
    build:
      context: docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./secrets:/usr/local/airflow/secrets
    environment: *airflow_environment
    command: scheduler
    networks:
      - my_network

volumes:
  logs: 
  secrets:
    external: true

networks:
  my_network:
